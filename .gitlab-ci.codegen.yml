default:
  tags: [privileged, amd64]
  image: docker:24.0.7-git
  services: [docker:24.0.7-dind]
  before_script:
    - apk update
    - apk add bash python3
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - ./asn1/patches/patch.sh

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: /certs
  GIT_SUBMODULE_STRATEGY: recursive
  _ASN1C_CI_IMAGE: ${CI_REGISTRY_IMAGE}/asn1c:${CI_COMMIT_REF_SLUG}_ci
  _ASN1C_IMAGE_LATEST: ${CI_REGISTRY_IMAGE}/asn1c:latest
  _RGEN_CI_IMAGE: ${CI_REGISTRY_IMAGE}/rgen:${CI_COMMIT_REF_SLUG}_ci
  _RGEN_IMAGE_LATEST: ${CI_REGISTRY_IMAGE}/rgen:latest

stages:
  - Build Docker Images
  - asn1c
  - ROS Messages
  - Conversion Headers

asn1c-docker:
  stage: Build Docker Images
  before_script:
    - cd utils/codegen/docker
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - docker build -t ${_ASN1C_CI_IMAGE} -f asn1c.Dockerfile .
    - docker push ${_ASN1C_CI_IMAGE}
    - |-
      if [[ "${CI_COMMIT_REF_SLUG}" == "${CI_DEFAULT_BRANCH}" ]]; then
        docker tag ${_ASN1C_CI_IMAGE} ${_ASN1C_IMAGE_LATEST}
        docker push ${_ASN1C_IMAGE_LATEST}
      fi

rgen-docker:
  stage: Build Docker Images
  before_script:
    - cd utils/codegen/codegen-rust/docker
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - docker build -t ${_RGEN_CI_IMAGE} -f rgen.Dockerfile ..
    - docker push ${_RGEN_CI_IMAGE}
    - |-
      if [[ "${CI_COMMIT_REF_SLUG}" == "${CI_DEFAULT_BRANCH}" ]]; then
        docker tag ${_RGEN_CI_IMAGE} ${_RGEN_IMAGE_LATEST}
        docker push ${_RGEN_IMAGE_LATEST}
      fi

etsi_its_cam_coding:
  stage: asn1c
  needs: ["asn1c-docker"]
  script:
    - >
      ./utils/codegen/asn1ToC.py
      asn1/raw/cam_en302637_2/CAM-PDU-Descriptions.asn
      asn1/raw/cam_en302637_2/cdd/ITS-Container.asn
      -t cam
      -o etsi_its_coding/etsi_its_cam_coding
      -td /builds/$CI_PROJECT_PATH/tmp
      -di ${_ASN1C_CI_IMAGE}
    - rm -rf /builds/$CI_PROJECT_PATH/tmp
    - if [[ ! -z "$(git status --porcelain)" ]]; then echo "Code generation script resulted in changes to the repository" && git diff; exit 1; fi

etsi_its_denm_coding:
  stage: asn1c
  needs: ["asn1c-docker"]
  script:
    - >
      ./utils/codegen/asn1ToC.py
      asn1/raw/denm_en302637_3/DENM-PDU-Descriptions.asn
      asn1/raw/denm_en302637_3/cdd/ITS-Container.asn
      -t denm
      -o etsi_its_coding/etsi_its_denm_coding
      -td /builds/$CI_PROJECT_PATH/tmp
      -di ${_ASN1C_CI_IMAGE}
    - rm -rf /builds/$CI_PROJECT_PATH/tmp
    - if [[ ! -z "$(git status --porcelain)" ]]; then echo "Code generation script resulted in changes to the repository" && git diff; exit 1; fi

etsi_its_cpm_ts_coding:
  stage: asn1c
  needs: ["asn1c-docker"]
  script:
    - >
      ./utils/codegen/asn1ToC.py
      asn1/raw/cpm_ts103324/asn/CPM-PDU-Descriptions.asn
      asn1/raw/cpm_ts103324/asn/CPM-OriginatingStationContainers.asn
      asn1/raw/cpm_ts103324/asn/CPM-PerceivedObjectContainer.asn
      asn1/raw/cpm_ts103324/asn/CPM-PerceptionRegionContainer.asn
      asn1/raw/cpm_ts103324/asn/CPM-SensorInformationContainer.asn
      asn1/patched/cpm_ts103324/asn/cdd/ETSI-ITS-CDD.asn
      -t cpm_ts
      -o etsi_its_coding/etsi_its_cpm_ts_coding
      -td /builds/$CI_PROJECT_PATH/tmp
      -di ${_ASN1C_CI_IMAGE}
    - rm -rf /builds/$CI_PROJECT_PATH/tmp
    - if [[ ! -z "$(git status --porcelain)" ]]; then echo "Code generation script resulted in changes to the repository" && git diff; exit 1; fi

etsi_its_cam_msgs:
  stage: ROS Messages
  needs: ["rgen-docker"]
  script:
    - >
      ./utils/codegen/codegen-rust/asn1ToRosMsg.py
      asn1/raw/cam_en302637_2/CAM-PDU-Descriptions.asn
      asn1/raw/cam_en302637_2/cdd/ITS-Container.asn
      -o etsi_its_msgs/etsi_its_cam_msgs/msg
      -td /builds/$CI_PROJECT_PATH/tmp
      -di ${_RGEN_CI_IMAGE}
    - rm -rf /builds/$CI_PROJECT_PATH/tmp
    - if [[ ! -z "$(git status --porcelain)" ]]; then echo "Code generation script resulted in changes to the repository" && git diff; exit 1; fi

etsi_its_denm_msgs:
  stage: ROS Messages
  needs: ["rgen-docker"]
  script:
    - >
      ./utils/codegen/codegen-rust/asn1ToRosMsg.py
      asn1/raw/denm_en302637_3/DENM-PDU-Descriptions.asn
      asn1/raw/denm_en302637_3/cdd/ITS-Container.asn
      -o etsi_its_msgs/etsi_its_denm_msgs/msg
      -td /builds/$CI_PROJECT_PATH/tmp
      -di ${_RGEN_CI_IMAGE}
    - rm -rf /builds/$CI_PROJECT_PATH/tmp
    - if [[ ! -z "$(git status --porcelain)" ]]; then echo "Code generation script resulted in changes to the repository" && git diff; exit 1; fi

etsi_its_cpm_ts_msgs:
  stage: ROS Messages
  needs: ["rgen-docker"]
  script:
    - >
      ./utils/codegen/codegen-rust/asn1ToRosMsg.py
      asn1/raw/cpm_ts103324/asn/CPM-PDU-Descriptions.asn
      asn1/raw/cpm_ts103324/asn/CPM-OriginatingStationContainers.asn
      asn1/raw/cpm_ts103324/asn/CPM-PerceivedObjectContainer.asn
      asn1/raw/cpm_ts103324/asn/CPM-PerceptionRegionContainer.asn
      asn1/raw/cpm_ts103324/asn/CPM-SensorInformationContainer.asn
      asn1/patched/cpm_ts103324/asn/cdd/ETSI-ITS-CDD.asn
      -o etsi_its_msgs/etsi_its_cpm_ts_msgs/msg
      -td /builds/$CI_PROJECT_PATH/tmp
      -di ${_RGEN_CI_IMAGE}
    - rm -rf /builds/$CI_PROJECT_PATH/tmp
    - if [[ ! -z "$(git status --porcelain)" ]]; then echo "Code generation script resulted in changes to the repository" && git diff; exit 1; fi

etsi_its_cam_conversion:
  stage: Conversion Headers
  needs: ["rgen-docker"]
  script:
    - >
      ./utils/codegen/codegen-rust/asn1ToConversionHeader.py
      asn1/raw/cam_en302637_2/CAM-PDU-Descriptions.asn
      asn1/raw/cam_en302637_2/cdd/ITS-Container.asn
      -t cam
      -o etsi_its_conversion/etsi_its_cam_conversion/include/etsi_its_cam_conversion
      -td /builds/$CI_PROJECT_PATH/tmp
      -di ${_RGEN_CI_IMAGE}
    - rm -rf /builds/$CI_PROJECT_PATH/tmp
    - if [[ ! -z "$(git status --porcelain)" ]]; then echo "Code generation script resulted in changes to the repository" && git diff; exit 1; fi

etsi_its_denm_conversion:
  stage: Conversion Headers
  needs: ["rgen-docker"]
  script:
    - >
      ./utils/codegen/codegen-rust/asn1ToConversionHeader.py
      asn1/raw/denm_en302637_3/DENM-PDU-Descriptions.asn
      asn1/raw/denm_en302637_3/cdd/ITS-Container.asn
      -t denm
      -o etsi_its_conversion/etsi_its_denm_conversion/include/etsi_its_denm_conversion
      -td /builds/$CI_PROJECT_PATH/tmp
      -di ${_RGEN_CI_IMAGE}
    - rm -rf /builds/$CI_PROJECT_PATH/tmp
    - if [[ ! -z "$(git status --porcelain)" ]]; then echo "Code generation script resulted in changes to the repository" && git diff; exit 1; fi

etsi_its_cpm_ts_conversion:
  stage: Conversion Headers
  needs: ["rgen-docker"]
  script:
    - >
      ./utils/codegen/codegen-rust/asn1ToConversionHeader.py
      asn1/raw/cpm_ts103324/asn/CPM-PDU-Descriptions.asn
      asn1/raw/cpm_ts103324/asn/CPM-OriginatingStationContainers.asn
      asn1/raw/cpm_ts103324/asn/CPM-PerceivedObjectContainer.asn
      asn1/raw/cpm_ts103324/asn/CPM-PerceptionRegionContainer.asn
      asn1/raw/cpm_ts103324/asn/CPM-SensorInformationContainer.asn
      asn1/patched/cpm_ts103324/asn/cdd/ETSI-ITS-CDD.asn
      -t cpm_ts
      -o etsi_its_conversion/etsi_its_cpm_ts_conversion/include/etsi_its_cpm_ts_conversion
      -td /builds/$CI_PROJECT_PATH/tmp
      -di ${_RGEN_CI_IMAGE}
    - rm -rf /builds/$CI_PROJECT_PATH/tmp
    - if [[ ! -z "$(git status --porcelain)" ]]; then echo "Code generation script resulted in changes to the repository" && git diff; exit 1; fi